version: '3'
services:
    redis:
        image: redis
        command: redis-server --appendonly yes
        volumes:
            - redis-data:/data

    # prometheus:
    #     image: prom/prometheus:v2.8.0
    #     volumes:
    #         - ./prometheus.yml:/etc/prometheus/prometheus.yml
    #     command:
    #         - '--config.file=/etc/prometheus/prometheus.yml'
    #     ports:
    #         - '9090:9090'

    # grafana:
    #     image: grafana/grafana:6.0.2
    #     environment:
    #         - GF_SECURITY_ADMIN_PASSWORD=${GF_PASS}
    #     depends_on:
    #         - prometheus
    #     ports:
    #         - "3000:3000"
    #
    inspect:
        build: https://${GITHUB_ACCESS_TOKEN}:@github.com/smilga/analyzer.git#master:puppeteer
        depends_on:
            - redis
        environment:
            - TIMEOUT=30000
            - RETRY=3
            - CONCURRENCY=22
            - READ_LIST=pending:lists
        command: ["npm", "run", "start", "--prefix", "/puppeteer"]

    inspect-slow:
        build: https://${GITHUB_ACCESS_TOKEN}:@github.com/smilga/analyzer.git#master:puppeteer
        depends_on:
            - redis
        environment:
            - TIMEOUT=120000
            - RETRY=3
            - CONCURRENCY=6
            - READ_LIST=timeouted:lists
        command: ["npm", "run", "start", "--prefix", "/puppeteer"]

    web:
        build: https://${GITHUB_ACCESS_TOKEN}:@github.com/smilga/analyzer.git#master:web
        environment:
            - API_PORT=${API_PORT}
            - WEB_DOMAIN=${WEB_DOMAIN}
        command: ["npm", "run", "start"]

    api:
        build: https://${GITHUB_ACCESS_TOKEN}:@github.com/smilga/analyzer.git#master:api
        environment:
            - API_PORT=${API_PORT}
            - JWT_SECRET=${JWT_SECRET}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASS=${MYSQL_PASS}
            - MYSQL_DATABASE=${MYSQL_DATABASE}
        ports:
            - "3033:3033"
        command: ["server"]

    database:
        image: mysql:latest
        command: --default-authentication-plugin=mysql_native_password
        volumes:
            - db-data:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASS}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASS}
            MYSQL_DATABASE: ${MYSQL_DATABASE}

    nginx:
        image: nginx:latest
        volumes:
            - ./mysite.template:/etc/nginx/conf.d/mysite.template
        ports:
            - "80:80"
        environment:
            - NGINX_HOST=${NGINX_HOST}
            - WEB_PORT=${WEB_PORT}
        command: /bin/bash -c "envsubst '$${NGINX_HOST} $${WEB_PORT}' < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"

volumes:
    db-data:
    redis-data:

