version: '3'
services:
    redis:
        image: redis

    prometheus:
        image: prom/prometheus:v2.8.0
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
        ports:
            - '9090:9090'

    grafana:
        image: grafana/grafana:6.0.2
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=${GF_PASS}
        depends_on:
            - prometheus
        ports:
            - "3000:3000"

    inspector:
        build:
            context: ./puppeteer
            dockerfile: Dockerfile-dev
        volumes:
            - ./puppeteer:/puppeteer
        depends_on:
            - redis
        command: ["npm", "run", "start", "--prefix", "/puppeteer"]

    web:
        image: web-dev
        build:
            context: ./web
            dockerfile: Dockerfile-dev
        volumes:
            - ./web:/analyzer-web
        environment:
            - API_PORT=${API_PORT}
            - WEB_DOMAIN=${WEB_DOMAIN}
        command: sh -c "npm rebuild > /dev/null && API_PORT=${API_PORT} npm run dev"

    api:
        image: api-dev
        build:
            context: ./api
            dockerfile: Dockerfile-dev
        volumes:
            - ./api:/analyzer-api
        environment:
            - API_PORT=${API_PORT}
            - JWT_SECRET=${JWT_SECRET}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASS=${MYSQL_PASS}
            - MYSQL_DATABASE=${MYSQL_DATABASE}
        depends_on:
            - database
        ports:
            - "3033:3033"
        command: sh -c "npm rebuild > /dev/null --prefix puppeteer && refresh run"

    database:
        image: mysql:latest
        command: --default-authentication-plugin=mysql_native_password
        volumes:
            - db-data:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASS}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASS}
            MYSQL_DATABASE: ${MYSQL_DATABASE}

    nginx:
        image: nginx:latest
        volumes:
            - ./mysite.template:/etc/nginx/conf.d/mysite.template
        ports:
            - "8080:80"
        environment:
            - NGINX_HOST=${NGINX_HOST}
            - WEB_PORT=${WEB_PORT}
        command: /bin/bash -c "envsubst '$${NGINX_HOST} $${WEB_PORT}' < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"

volumes:
    db-data:

