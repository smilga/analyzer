version: '3'
services:
    web:
        image: web-dev
        build:
            context: ./web
            dockerfile: Dockerfile-dev
        volumes:
            - ./web:/analyzer-web
        environment:
            - API_PORT=${API_PORT}
        command: sh -c "npm rebuild > /dev/null && API_PORT=${API_PORT} npm run dev"

    api:
        image: api-dev
        build:
            context: ./api
            dockerfile: Dockerfile-dev
        volumes:
            - ./api:/analyzer-api
            - ./api/datastore/mysql/migrations/:/analyzer-api/datastore/mysql/migrations
        environment:
            - API_PORT=${API_PORT}
            - JWT_SECRET=${JWT_SECRET}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASS=${MYSQL_PASS}
            - MYSQL_DATABASE=${MYSQL_DATABASE}
        command: sh -c "npm rebuild > /dev/null --prefix pupetteer && refresh run"

    browserless:
        image: browserless/chrome
        restart: always
        environment:
              - MAX_CONCURRENT_SESSIONS=5
              - MAX_QUEUE_LENGTH=10
              - PREBOOT_CHROME=true
              - ENABLE_DEBUGGER=false
              - CONNECTION_TIMEOUT=300000
    database:
        image: mysql:latest
        command: --default-authentication-plugin=mysql_native_password
        volumes:
            - db-data:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASS}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASS}
            MYSQL_DATABASE: ${MYSQL_DATABASE}

    nginx:
        image: nginx:latest
        volumes:
            - ./mysite.template:/etc/nginx/conf.d/mysite.template
        ports:
            - "8080:80"
        environment:
            - NGINX_HOST=${NGINX_HOST}
            - WEB_PORT=${WEB_PORT}
        command: /bin/bash -c "envsubst '$${NGINX_HOST} $${WEB_PORT}' < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"

volumes:
    db-data:

